const { exec } = require('child_process');const fs = require('fs');const path = require('path');const less = require('less');const rootDir = path.resolve(__dirname, '..');const srcDir = path.resolve(rootDir, 'src/components/cus-tabs');const outputDir = path.resolve(rootDir, 'output');const outputDistDir = path.resolve(outputDir, 'dist');const outputSrcDir = path.resolve(outputDir, 'src');if (!fs.existsSync(outputDistDir)) fs.mkdirSync(outputDistDir, { recursive: true });if (!fs.existsSync(outputSrcDir)) fs.mkdirSync(outputSrcDir, { recursive: true });exec('npm run compile', (e) => {  if (e) throw e;  const styles = fs.readdirSync(srcDir).filter(o => o.endsWith('.less'));  styles.forEach(o => {    // fs.copyFileSync(path.resolve(srcDir, o), path.resolve(outputDistDir, o));    less.render(fs.readFileSync(path.resolve(srcDir, o), 'utf8'), { sourceMap: {} }).then(output => {      fs.writeFileSync(path.resolve(outputDistDir, `${o.match(/(.+)\.less$/)[1]}.css`), output.css, { encoding: 'utf8' });      fs.writeFileSync(path.resolve(outputDistDir, `${o.match(/(.+)\.less$/)[1]}.css.map`), output.map, { encoding: 'utf8' });    });  });  const src = fs.readdirSync(srcDir);  src.forEach(o => {    fs.copyFileSync(path.resolve(srcDir, o), path.resolve(outputSrcDir, o));  });});